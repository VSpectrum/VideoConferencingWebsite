var https = require('https');
var fs = require("fs");

var options = {
    key: fs.readFileSync('/etc/sslmate/conference.veydh.com.key'),
    cert: fs.readFileSync('/etc/sslmate/conference.veydh.com.crt'),
    ca: fs.readFileSync('/etc/sslmate/conference.veydh.com.crt')
};

var app = require('https').createServer(options, serverCallback);

function serverCallback(request, response) {
    request.addListener('end', function () {
        response.setHeader('Access-Control-Allow-Origin', '*');
        response.setHeader('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');
        response.setHeader('Access-Control-Allow-Headers', 'Content-Type');

        file.serve(request, response);
    }).resume();
}


var io = require('socket.io').listen(app, {
    log: false,
    origins: '*:*'
});

io.set('transports', [
     'websocket',
    'xhr-polling',
    'jsonp-polling'
]);

io.sockets.on('connection', function (socket) {

	socket.on('enter', function(data){
		console.log(data.uname+" has entered "+data.sessname);
		socket.join(data.sessname);
		data.state = "entered";
		socketio.sockets.in(data.sessname).emit('userstate', data);
	});

	socket.on('roommsg', function(datamsg){
		
		socketio.sockets.in(datamsg.sessname).emit('chatmsg', datamsg);
	});

	socket.on('leave', function(data){
		console.log(data.uname+" has left "+data.sessname);
		socket.leave(data.sessname);
		data.state = "left";
		socketio.sockets.in(data.sessname).emit('userstate', data);
	});

});

app.listen(8887);
